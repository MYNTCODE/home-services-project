import { Router } from "express";
import bcrypt from "bcrypt"; //‡πÄ‡∏õ‡πá‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡∏´‡∏±‡∏™
import jwt from "jsonwebtoken";
// import { db } from "../utils/db.js";

const authRouter = Router();

// function Register
authRouter.post("/register", async (req, res) => {
  const user = {
    name: req.body.name,
    phoneNumber: req.body.phoneNumber,
    email: req.body.email,
    password: req.body.password,
    role: req.body.role,
  };

  const salt = await bcrypt.genSalt(10);
  user.password = await bcrypt.hash(user.password, salt);
  // coursebook ‡πÄ‡∏õ‡πâ‡∏ô mongoDB üê∑ ‡∏ï‡∏£‡∏á‡∏ô‡∏µ‡πâ‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡πÄ‡∏õ‡πá‡∏ô‡∏Å‡∏≤‡∏£ access ‡∏Ç‡πâ‡∏≠‡∏°‡∏∏‡∏•‡πÉ‡∏ô data ‡∏°‡∏¥‡πâ‡∏ô‡πÑ‡∏°‡πà‡πÅ‡∏ô‡πà‡πÉ‡∏à‡∏ß‡πà‡∏≤‡πÇ‡∏Ñ‡πâ‡∏î‡πÅ‡∏ö‡∏ö‡πÑ‡∏´‡∏ô
  // const collection = db.collection("users");
  //   await collection.insertOne(user);

  return res.json({ message: "User has been created successfully" });
});

// todo 3 ‡πÉ‡∏´‡πâ‡∏™‡∏£‡πâ‡∏≤‡∏á API ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏≠‡∏≤‡πÑ‡∏ß‡πâ Login ‡∏ï‡∏±‡∏ß User ‡∏ï‡∏≤‡∏°‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏ó‡∏µ‡πà‡∏≠‡∏≠‡∏Å‡πÅ‡∏ö‡∏ö‡πÑ‡∏ß‡πâ
authRouter.post("/login", async (req, res) => {
  // coursebook ‡πÄ‡∏õ‡πâ‡∏ô mongoDB üê∑
  // const user = await await db.collection("users").findOne({
  //     username: req.body.username,
  //   });

  //   if (!user) {
  //     return res.status(404).json({
  //       message: "User not found",
  //     });
  //   }

  //   const isValidPassword = await bcrypt.compare(
  //     req.body.password,
  //     user.password
  //   );

  //   if (!isValidPassword) {
  //     return res.status(404).json({
  //       message: "password not valid",
  //     });
  //   }

  //   const token = jwt.sign(
  //     {
  //       id: user._id,
  //       firstName: user.firstName,
  //       lastName: user.lastName,
  //       role: user.role,
  //     },
  //     process.env.SECRET_KEY,
  //     {
  //       expiresIn: "900000",
  //     }
  //   );
  return res.json({
    message: "Login successfully",
    token,
  });
});

export default authRouter;
